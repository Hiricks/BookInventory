@page "/Error"
@using System.Diagnostics
@inject IWebHostEnvironment HostEnvironment

<PageTitle>Error - Henry's Book Inventory</PageTitle>

<div class="container">
    <h1 class="text-danger">Error</h1>
    <h2 class="text-danger">An error occurred while processing your request.</h2>

    @if (ShowRequestId)
    {
        <p>
            <strong>Request ID:</strong> <code>@RequestId</code>
        </p>
    }

    @if (HostEnvironment.IsDevelopment())
    {
        <h3>Development Mode</h3>
        <p>
            Detailed error information is available because the application is running in the Development environment.
        </p>
        @if (!string.IsNullOrEmpty(ExceptionMessage))
        {
            <div class="alert alert-danger">
                <h4>Exception Details:</h4>
                <p>@ExceptionMessage</p>
            </div>
        }
    }
    else
    {
        <h3>Production Mode</h3>
        <p>
            <strong>The application is running in Production mode.</strong> Detailed error information is not displayed for security reasons.
        </p>
    }

    <div class="mt-4">
        <a href="/" class="btn btn-primary">Return to Home</a>
        <a href="/books" class="btn btn-secondary ml-2">View Books</a>
    </div>
</div>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    [Parameter]
    public string? ExceptionMessage { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized()
    {
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
    }
}